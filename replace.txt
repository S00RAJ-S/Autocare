class bookings(models.Model):
    bid = models.IntegerField(primary_key=True)
    uid = models.IntegerField()
    details = models.CharField(max_length=500)
    category = models.CharField(max_length=20)


def submitbooking(request):
    if request.method == 'POST':
        details = request.POST.get('details')
        category = request.POST.get('category')
        userid = request.session['id']
        for i in range(1,10000):
                try:
                    bookings.objects.get(bid = i).bid
                    continue
                except:
                    bookings(bid=i,uid=userid,details=details,category=category).save()
                    messages.success(request, 'Your Booking has been received')
                    return redirect('/')
                
def mybookings(request):
    uid = request.session['id']
    ub = bookings.objects.all()
    ubdat ={'ub':ub,'uid':uid}
    try:
        if request.session['e'] and request.session['p'] != '':
            if request.session['t'] ==  'u':
                return render(request,'viewbookinguser.html',ubdat)
            else:
                return redirect('/')
    except: 
        return redirect('/')   

def delbooking(request):
    if request.method == 'POST':
        bookingid = request.POST.get('bid')
        try:
            bookings.objects.filter(bid=bookingid).delete()
            partneroffer.objects.filter(bid=bookingid).delete()
            messages.success(request,'Successfully Deleted Your Booking')
            return redirect('/user/mybookings/')
        except:
            messages.warning(request,'Not Deleted')
            return redirect('/user/mybookings/')



    path('submitbooking/',views.submitbooking),
    path('mybookings/',views.mybookings),
    path('delbooking/',views.delbooking),